---
import "../styles/main.scss";

// Minimal-upkeep SEO defaults pulled from page frontmatter when available
const p = Astro.props ?? {};
const metaTitle = p.title ?? "Cody Tanksley";
const metaDescription = p.description ?? p.excerpt ?? "Software engineer, photographer, and writer from Albany, NY";
const siteUrl = Astro.site ? Astro.site.toString() : undefined;
const pageUrl = new URL(Astro.request.url).toString();

// Accept either `cover` or `ogImage` from posts; fall back to a default image
const ogImageSrc = p.ogImage ?? p.cover ?? "/og/og-default.jpg";
const ogImage = (siteUrl && ogImageSrc) ? new URL(ogImageSrc, siteUrl).toString() : ogImageSrc;
const ogImageAlt = p.ogImageAlt ?? p.title ?? "Site preview";

// Heuristic: treat as a BlogPosting if there's a date-like field
const isPost = Boolean(p.date || p.pubDate);
const datePublished = p.pubDate ?? p.date;
const dateModified = p.updatedDate ?? datePublished;

// Normalize dates to ISO 8601 if present
const toISO = (d: string | Date | undefined): string | undefined => {
  if (!d) return undefined;
  if (typeof d === 'string') return new Date(`${d}T00:00:00Z`).toISOString();
  if (d instanceof Date && !isNaN(d.getTime())) return d.toISOString();
  try { return new Date(d).toISOString(); } catch { return undefined; }
};
const datePublishedISO = toISO(datePublished);
const dateModifiedISO = toISO(dateModified) ?? datePublishedISO;

const ld = isPost
  ? {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      headline: metaTitle,
      description: metaDescription,
      url: pageUrl,
      datePublished: datePublishedISO,
      dateModified: dateModifiedISO,
      author: [{ "@type": "Person", name: "Cody Tanksley" }],
      ...(ogImage ? { image: [ogImage] } : {}),
      mainEntityOfPage: pageUrl,
    }
  : {
      "@context": "https://schema.org",
      "@type": "WebSite",
      name: "Cody Tanksley",
      url: siteUrl ?? pageUrl,
      description: metaDescription,
    };

// Pre-stringify and escape to avoid any parser issues (e.g., </script> edge cases)
const ldJson = JSON.stringify(ld)
  .replace(/</g, '\\u003c')
  .replace(/>/g, '\\u003e')
  .replace(/&/g, '\\u0026')
  .replace(/\u2028/g, '\\u2028')
  .replace(/\u2029/g, '\\u2029');
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{metaTitle}</title>
    <meta name="description" content={metaDescription} />

    <!-- Canonical -->
    <link rel="canonical" href={pageUrl} />

    <!-- Open Graph -->
    <meta property="og:type" content={isPost ? "article" : "website"} />
    <meta property="og:site_name" content="Cody Tanksley" />
    <meta property="og:title" content={metaTitle} />
    <meta property="og:description" content={metaDescription} />
    <meta property="og:url" content={pageUrl} />
    {ogImage && (<meta property="og:image" content={ogImage} />)}
    {ogImageAlt && (<meta property="og:image:alt" content={ogImageAlt} />)}

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={metaTitle} />
    <meta name="twitter:description" content={metaDescription} />
    {ogImage && (<meta name="twitter:image" content={ogImage} />)}
    <meta name="color-scheme" content="light dark" />
    <script>
      // Apply session theme or fallback to system preference before CSS loads
      (function () {
        var KEY = 'theme-mode';
        var prefersDark = false;
        try {
          prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
        } catch (_err) {
          prefersDark = false;
        }

        var mode = prefersDark ? 'dark' : 'light';
        try {
          var stored = sessionStorage.getItem(KEY);
          if (stored === 'light' || stored === 'dark') {
            mode = stored;
          } else {
            sessionStorage.setItem(KEY, mode);
          }
        } catch (_e) {
          // ignore sessionStorage failures
        }

        document.documentElement.setAttribute('data-theme', mode);
      })();
    </script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.css"
    />
    <script type="application/ld+json" is:inline set:html={ldJson}></script>

    <!-- Favicons and PWA Icons -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png?v=1" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png?v=1" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png?v=1" />
    <link rel="manifest" href="/site.webmanifest?v=1" />
  </head>

  <body>
    <header>
      <nav>
        <a href="/" class="site-title">Cody Tanksley</a>
        <div class="nav-links">
          <a href="/about">About</a>
          <button
            id="theme-toggle"
            data-theme-toggle
            class="theme-toggle"
            type="button"
            data-mode="dark"
            aria-label="Switch to dark mode"
          >
            <span class="theme-icon theme-icon--sun" aria-hidden="true">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="lucide lucide-sun-icon lucide-sun"
                focusable="false"
              >
                <circle cx="12" cy="12" r="4" />
                <path d="M12 2v2" />
                <path d="M12 20v2" />
                <path d="m4.93 4.93 1.41 1.41" />
                <path d="m17.66 17.66 1.41 1.41" />
                <path d="M2 12h2" />
                <path d="M20 12h2" />
                <path d="m6.34 17.66-1.41 1.41" />
                <path d="m19.07 4.93-1.41 1.41" />
              </svg>
            </span>
            <span class="theme-icon theme-icon--moon" aria-hidden="true">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="lucide lucide-moon-icon lucide-moon"
                focusable="false"
              >
                <path d="M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401" />
              </svg>
            </span>
          </button>
        </div>
      </nav>
    </header>

    <main>
      <slot />
    </main>

    <footer>
      <span>Cody Tanksley</span>
      <a href="https://github.com/tanksc/tanksc-astro" target="_blank" rel="noopener noreferrer">Source</a>
    </footer>
    <script>
      import "../scripts/theme-toggle.ts";
      import "../scripts/equations.ts";
    </script>
  </body>
</html>
